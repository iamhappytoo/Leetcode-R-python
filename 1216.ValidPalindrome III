#Solution with @cache in python, which cache the result of your functions using the Least Recently Used (LRU) strategy.
class Solution:
    def isValidPalindrome(self, s: str, k: int) -> bool:
        @cache
        def dfs(i,j,k):
            if i >= j:
                return True
            
            if s[i] == s[j]:
                return dfs(i+1, j-1, k)
            elif k > 0:
                return dfs(i+1, j, k-1) or dfs(i, j-1, k-1)
            else:
                return False

        return dfs(0, len(s)-1, k)
        
#Solution with directly written memorization DP array. 
